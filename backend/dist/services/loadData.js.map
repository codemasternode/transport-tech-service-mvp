{"version":3,"sources":["../../src/services/loadData.js"],"names":["loadData","fileNames","getFileData","fileName","Promise","resolve","reject","fs","readFile","path","join","__dirname","err","data","JSON","parse","arrayOfPromisesWithFileData","i","length","push","all","result"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;SAEsBA,Q;;;;;;;0BAAf,iBAAwBC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,WADD,GACe,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,qBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,+BAAGC,QAAH,CAAYC,iBAAKC,IAAL,CAAUC,SAAV,oBAAgCR,QAAhC,EAAZ,EAAyD,UAACS,GAAD,EAAMC,IAAN,EAAe;AACtE,sBAAID,GAAJ,EAAS;AACPN,oBAAAA,MAAM;AACP;;AACDD,kBAAAA,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAP;AACD,iBALD;AAMD,eAPM,CAAP;AAQD,aAVI;;AAYCG,YAAAA,2BAZD,GAY+B,EAZ/B;;AAaL,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGhB,SAAS,CAACiB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCD,cAAAA,2BAA2B,CAACG,IAA5B,CAAiCjB,WAAW,CAACD,SAAS,CAACgB,CAAD,CAAV,CAA5C;AACD;;AAfI;AAAA,mBAgBgBb,OAAO,CAACgB,GAAR,CAAYJ,2BAAZ,CAhBhB;;AAAA;AAgBCK,YAAAA,MAhBD;AAAA,6CAiBEA,MAjBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\n\nexport async function loadData(fileNames) {\n  const getFileData = fileName => {\n    return new Promise((resolve, reject) => {\n      fs.readFile(path.join(__dirname, `../data/${fileName}`), (err, data) => {\n        if (err) {\n          reject();\n        }\n        resolve(JSON.parse(data));\n      });\n    });\n  };\n\n  const arrayOfPromisesWithFileData = [];\n  for (let i = 0; i < fileNames.length; i++) {\n    arrayOfPromisesWithFileData.push(getFileData(fileNames[i]));\n  }\n  const result = await Promise.all(arrayOfPromisesWithFileData);\n  return result;\n}\n"],"file":"loadData.js"}