{"version":3,"sources":["../../src/services/getRoadCode.js"],"names":["text","commandsPriors","getRoadCode","replace","cur","i","length","cpText","reg","RegExp","command","match","k","Array","isArray","reg2","match2"],"mappings":";;;;;;AAAA;AACA,IAAMA,IAAI,GAAG,8EAAb;AACA,IAAMC,cAAc,GAAG,CACnB;AACI,aAAW,UADf;AAEI,WAAS;AAFb,CADmB,EAKnB;AACI,aAAW,YADf;AAEI,WAAS;AAFb,CALmB,EASnB;AACI,aAAW,eADf;AAEI,WAAS;AAFb,CATmB,EAanB;AACI,aAAW,oBADf;AAEI,WAAS;AAFb,CAbmB,EAiBnB;AACI,aAAW,SADf;AAEI,WAAS;AAFb,CAjBmB,EAqBnB;AACI,aAAW,aADf;AAEI,WAAS;AAFb,CArBmB,EAyBnB;AACI,aAAW,WADf;AAEI,WAAS;AAFb,CAzBmB,EA6BnB;AACI,aAAW,eADf;AAEI,WAAS;AAFb,CA7BmB,EAiCnB;AACI,aAAW,kBADf;AAEI,WAAS;AAFb,CAjCmB,EAqCnB;AACI,aAAW,sBADf;AAEI,WAAS;AAFb,CArCmB,EAyCnB;AACI,aAAW,UADf;AAEI,WAAS;AAFb,CAzCmB,EA6CnB;AACI,aAAW,kBADf;AAEI,WAAS;AAFb,CA7CmB,EAiDnB;AACI,aAAW,mBADf;AAEI,WAAS;AAFb,CAjDmB,EAqDnB;AACI,aAAW,mBADf;AAEI,WAAS;AAFb,CArDmB,EAyDnB;AACI,aAAW,mBADf;AAEI,WAAS;AAFb,CAzDmB,EA6DnB;AACI,aAAW,mBADf;AAEI,WAAS;AAFb,CA7DmB,EAiEnB;AACI,aAAW,eADf;AAEI,WAAS;AAFb,CAjEmB,EAqEnB;AACI,aAAW,eADf;AAEI,WAAS;AAFb,CArEmB,EAyEnB;AACI,aAAW,cADf;AAEI,WAAS;AAFb,CAzEmB,EA6EnB;AACI,aAAW,cADf;AAEI,WAAS;AAFb,CA7EmB,EAkFnB;AACI,aAAW,iBADf;AAEI,WAAS;AAFb,CAlFmB,EAsFnB;AACI,aAAW,gBADf;AAEI,WAAS;AAFb,CAtFmB,EA0FnB;AACI,aAAW,cADf;AAEI,WAAS;AAFb,CA1FmB,EA8FnB;AACI,aAAW,eADf;AAEI,WAAS;AAFb,CA9FmB,CAAvB;;AAoGO,SAASC,WAAT,CAAqBF,IAArB,EAA2B;AAC9BA,EAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,iBAAb,EAAgC,EAAhC,CAAP;AACA,MAAIC,GAAG,GAAG,IAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAAc,CAACK,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,QAAIE,MAAM,GAAGP,IAAb;AACA,QAAIQ,GAAG,GAAG,IAAIC,MAAJ,WAAcR,cAAc,CAACI,CAAD,CAAd,CAAkBK,OAAhC,aAAgD,KAAhD,CAAV;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAACI,KAAP,CAAaH,GAAb,CAAd;;AACA,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeC,KAAK,CAACC,OAAN,CAAcH,KAAd,KAAwBC,CAAC,GAAGD,KAAK,CAACL,MAAjD,EAAyDM,CAAC,EAA1D,EAA8D;AAC1D,UAAIG,IAAI,GAAG,IAAIN,MAAJ,CAAW,aAAX,EAAyB,KAAzB,CAAX;AACA,UAAMO,MAAM,GAAGL,KAAK,CAACC,CAAD,CAAL,CAASD,KAAT,CAAeI,IAAf,CAAf;;AACA,UAAG,CAACX,GAAD,IAAQS,KAAK,CAACC,OAAN,CAAcE,MAAd,CAAX,EAAkC;AAC9BZ,QAAAA,GAAG,GAAGY,MAAN;AACA;AACH;AACJ;AACJ;;AACD,SAAOZ,GAAP;AACH;;AAEDF,WAAW,CAACF,IAAD,CAAX","sourcesContent":["//const text = \"Keep <b>left</b> at the fork, follow signs for <b>A23/M12</b>/<wbr/><b>Regensburg</b>/<wbr/><b>München</b>/<wbr/><b>A9</b>/<wbr/><b>Nürnberg-Nord</b>/<wbr/><b>N.-Flughafen</b>/<wbr/><b>Fähre/A10</b> and merge onto <b>A3</b>\"\nconst text = \"Continue onto <b>A12/M12<div style=\\\"font-size:0.9em\\\">Entering Poland</div>\"\nconst commandsPriors = [\n    {\n        \"command\": \"Merge on\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"Merge onto\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"Continue onto\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"Continue to follow\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"Stay on\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"and becomes\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"exit onto\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"exit onto the\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"Take the ramp to\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"Take the exit toward\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"Take the\",\n        \"prior\": 1\n    },\n    {\n        \"command\": \"follow signs for\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head southwest on\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head northwest on\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head southeast on\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head northeast on\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head north on\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head south on\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head west on\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Head east on\",\n        \"prior\": 2\n    },\n\n    {\n        \"command\": \"Turn right onto\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Turn left onto\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Turn left at\",\n        \"prior\": 2\n    },\n    {\n        \"command\": \"Turn right at\",\n        \"prior\": 2\n    }\n]\n\nexport function getRoadCode(text) {\n    text = text.replace(/<\\/?[^>]+(>|$)/g, \"\")\n    let cur = null\n    for (let i = 0; i < commandsPriors.length; i++) {\n        let cpText = text\n        let reg = new RegExp(`${commandsPriors[i].command}.[^ ]+`,\"igm\")\n        const match = cpText.match(reg)\n        for(let k = 0; Array.isArray(match) && k < match.length; k++) {\n            let reg2 = new RegExp(\"[a-z][0-9]+\",\"igm\")\n            const match2 = match[k].match(reg2)\n            if(!cur && Array.isArray(match2)) {\n                cur = match2\n                break\n            }\n        }\n    }\n    return cur\n}\n\ngetRoadCode(text)\n"],"file":"getRoadCode.js"}