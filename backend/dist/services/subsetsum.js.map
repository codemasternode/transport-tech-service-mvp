{"version":3,"sources":["../../src/services/subsetsum.js"],"names":["vehiclesWithVolume","search","array","dimensions","capacityOrVolume","type","demandVolume","width","height","length","chooseVehicles","sort","a","b","fullCost","i","vehicleVolume","capacity","push","enoughVolume","enoughCapacity","volume"],"mappings":";;;;;;AAAA,IAAMA,kBAAkB,GAAG,CACzB,OADyB,EAEzB,oBAFyB,EAGzB,iBAHyB,EAIzB,mBAJyB,CAA3B;;AAOO,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,gBAAnC,EAAqDC,IAArD,EAA2D;AAChE,MAAIA,IAAI,KAAK,UAAb,EAAyB;AACvB,QAAMC,YAAY,GAChBH,UAAU,CAACI,KAAX,GAAmBJ,UAAU,CAACK,MAA9B,GAAuCL,UAAU,CAACM,MADpD;AAEA,QAAIC,cAAc,GAAG,EAArB;AACAR,IAAAA,KAAK,CAACS,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAzB;AAAA,KAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAAK,CAACO,MAA1B,EAAkCM,CAAC,EAAnC,EAAuC;AAAA,gCACHb,KAAK,CAACa,CAAD,CAAL,CAASZ,UADN;AAAA,UAC7BI,KAD6B,uBAC7BA,KAD6B;AAAA,UACtBC,MADsB,uBACtBA,MADsB;AAAA,UACdC,MADc,uBACdA,MADc;AAErC,UAAMO,aAAa,GAAGT,KAAK,GAAGC,MAAR,GAAiBC,MAAvC;;AACA,UACEO,aAAa,GAAGV,YAAhB,IACAJ,KAAK,CAACa,CAAD,CAAL,CAASE,QAAT,GAAoBb,gBAFtB,EAGE;AACAM,QAAAA,cAAc,CAACQ,IAAf,CAAoBhB,KAAK,CAACa,CAAD,CAAzB;AACA,eAAOL,cAAP;AACD;AACF;;AACDA,IAAAA,cAAc,GAAG,EAAjB;AACA,QAAIS,YAAY,GAAG,CAAnB;AACA,QAAIC,cAAc,GAAG,CAArB;AACAlB,IAAAA,KAAK,CAACS,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnB,aAAOA,CAAC,CAACI,QAAF,GAAaL,CAAC,CAACK,QAAtB;AACD,KAFD;;AAGA,SAAK,IAAIF,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGb,KAAK,CAACO,MAA1B,EAAkCM,EAAC,EAAnC,EAAuC;AAAA,iCACHb,KAAK,CAACa,EAAD,CAAL,CAASZ,UADN;AAAA,UAC7BI,KAD6B,wBAC7BA,KAD6B;AAAA,UACtBC,MADsB,wBACtBA,MADsB;AAAA,UACdC,MADc,wBACdA,MADc;;AAErC,UAAMO,cAAa,GAAGT,KAAK,GAAGC,MAAR,GAAiBC,MAAvC;;AACAC,MAAAA,cAAc,CAACQ,IAAf,CAAoBhB,KAAK,CAACa,EAAD,CAAzB;AACAI,MAAAA,YAAY,IAAIH,cAAhB;AACAI,MAAAA,cAAc,IAAIlB,KAAK,CAACa,EAAD,CAAL,CAASE,QAA3B;;AACA,UAAIE,YAAY,GAAGb,YAAf,IAA+Bc,cAAc,GAAGhB,gBAApD,EAAsE;AACpE,eAAOM,cAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD,GAjCD,MAiCO,IAAIL,IAAI,KAAK,QAAb,EAAuB;AAC5B,QAAIK,eAAc,GAAG,EAArB;AACAR,IAAAA,KAAK,CAACS,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAzB;AAAA,KAAX;;AACA,SAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGb,KAAK,CAACO,MAA1B,EAAkCM,GAAC,EAAnC,EAAuC;AACrC,UAAIb,KAAK,CAACa,GAAD,CAAL,CAASM,MAAT,GAAkBjB,gBAAtB,EAAwC;AACtCM,QAAAA,eAAc,CAACQ,IAAf,CAAoBhB,KAAK,CAACa,GAAD,CAAzB;;AACA,eAAOL,eAAP;AACD;AACF;;AACDA,IAAAA,eAAc,GAAG,EAAjB;AACA,QAAIS,aAAY,GAAG,CAAnB;AACAjB,IAAAA,KAAK,CAACS,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnB,aAAOA,CAAC,CAACQ,MAAF,GAAWT,CAAC,CAACS,MAApB;AACD,KAFD;;AAGA,SAAK,IAAIN,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGb,KAAK,CAACO,MAA1B,EAAkCM,GAAC,EAAnC,EAAuC;AACrCL,MAAAA,eAAc,CAACQ,IAAf,CAAoBhB,KAAK,CAACa,GAAD,CAAzB;;AACAI,MAAAA,aAAY,IAAIjB,KAAK,CAACa,GAAD,CAAL,CAASM,MAAzB;;AACA,UAAIF,aAAY,GAAGf,gBAAnB,EAAqC;AACnC,eAAOM,eAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;AACF","sourcesContent":["const vehiclesWithVolume = [\n  \"Silos\",\n  \"Cysterna chemiczna\",\n  \"Cysterna gazowa\",\n  \"Cysterna paliwowa\"\n];\n\nexport function search(array, dimensions, capacityOrVolume, type) {\n  if (type === \"capacity\") {\n    const demandVolume =\n      dimensions.width * dimensions.height * dimensions.length;\n    let chooseVehicles = [];\n    array.sort((a, b) => a.fullCost - b.fullCost);\n    for (let i = 0; i < array.length; i++) {\n      const { width, height, length } = array[i].dimensions;\n      const vehicleVolume = width * height * length;\n      if (\n        vehicleVolume > demandVolume &&\n        array[i].capacity > capacityOrVolume\n      ) {\n        chooseVehicles.push(array[i]);\n        return chooseVehicles;\n      }\n    }\n    chooseVehicles = [];\n    let enoughVolume = 0;\n    let enoughCapacity = 0;\n    array.sort((a, b) => {\n      return b.capacity - a.capacity;\n    });\n    for (let i = 0; i < array.length; i++) {\n      const { width, height, length } = array[i].dimensions;\n      const vehicleVolume = width * height * length;\n      chooseVehicles.push(array[i]);\n      enoughVolume += vehicleVolume;\n      enoughCapacity += array[i].capacity;\n      if (enoughVolume > demandVolume && enoughCapacity > capacityOrVolume) {\n        return chooseVehicles;\n      }\n    }\n    return null;\n  } else if (type === \"volume\") {\n    let chooseVehicles = [];\n    array.sort((a, b) => a.fullCost - b.fullCost);\n    for (let i = 0; i < array.length; i++) {\n      if (array[i].volume > capacityOrVolume) {\n        chooseVehicles.push(array[i]);\n        return chooseVehicles;\n      }\n    }\n    chooseVehicles = [];\n    let enoughVolume = 0;\n    array.sort((a, b) => {\n      return b.volume - a.volume;\n    });\n    for (let i = 0; i < array.length; i++) {\n      chooseVehicles.push(array[i]);\n      enoughVolume += array[i].volume;\n      if (enoughVolume > capacityOrVolume) {\n        return chooseVehicles;\n      }\n    }\n    return null;\n  }\n}\n"],"file":"subsetsum.js"}